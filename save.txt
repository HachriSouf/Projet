services:

  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    volumes:
      - ./customer-service:/app
    ports:
      - "5000:5000"
    env_file:
      - ./customer-service/.env
    networks:
      - shrp-ntwrk
    depends_on:
      customer-db:
        condition: service_healthy

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    volumes:
      - ./auth-service:/app
    ports:
      - "3000:3000"
    env_file:
      - ./auth-service/.env
    networks:
      - shrp-ntwrk
    depends_on:
      auth-db:
        condition: service_healthy

  auth-db:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: auth_db
    volumes:
      - ./auth-db/data:/data/db
      - ./auth-db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - shrp-ntwrk
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

  customer-db:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: customer_db
    volumes:
      - ./customer-db/data:/data/db
      - ./customer-db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - shrp-ntwrk
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

  gateaway-service:
    build:
      context: ./gateaway-service
      dockerfile: Dockerfile
    volumes:
      - ./gateaway-service:/app
    ports:
      - "8000:8000"
    env_file:
      - ./gateaway-service/.env
    networks:
      - shrp-ntwrk
    depends_on:
      auth-service:
        condition: service_healthy
      customer-service:
        condition: service_healthy

networks:
  shrp-ntwrk:
    driver: bridge
